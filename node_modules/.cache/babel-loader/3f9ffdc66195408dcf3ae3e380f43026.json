{"ast":null,"code":"import _classCallCheck from \"/Users/bentd/Work/Notes/bullet-editor0/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bentd/Work/Notes/bullet-editor0/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport ComponentManager from 'sn-components-api';\n\nvar BridgeManager =\n/*#__PURE__*/\nfunction () {\n  _createClass(BridgeManager, null, [{\n    key: \"get\",\n\n    /* Singleton */\n    value: function get() {\n      if (this.instance == null) {\n        this.instance = new BridgeManager();\n      }\n\n      return this.instance;\n    }\n  }]);\n\n  function BridgeManager() {\n    _classCallCheck(this, BridgeManager);\n\n    this.updateObservers = [];\n    this.initiateBridge();\n  }\n\n  _createClass(BridgeManager, [{\n    key: \"addUpdateObserver\",\n    value: function addUpdateObserver(callback) {\n      var observer = {\n        callback: callback\n      };\n      this.updateObservers.push(observer);\n      return observer;\n    }\n  }, {\n    key: \"notifyObserversOfUpdate\",\n    value: function notifyObserversOfUpdate() {\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.updateObservers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var observer = _step.value;\n          observer.callback();\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"getNote\",\n    value: function getNote() {\n      return this.note;\n    }\n  }, {\n    key: \"initiateBridge\",\n    value: function initiateBridge() {\n      var _this = this;\n\n      var permissions = [{\n        name: \"stream-context-item\" // name: \"stream-items\"\n\n      }];\n      this.componentManager = new ComponentManager(permissions, function () {// on ready\n      });\n      this.componentManager.streamContextItem(function (item) {\n        _this.note = item;\n\n        _this.notifyObserversOfUpdate();\n      }); // this.componentManager.streamItems([\"SN|Component\", \"SN|Theme\", \"SF|Extension\"], (items) => {\n      //   this.items = items.filter((item) => {return !item.isMetadataUpdate});\n      // });\n    }\n  }]);\n\n  return BridgeManager;\n}();\n\nBridgeManager.instance = null;\nexport { BridgeManager as default };","map":{"version":3,"sources":["/Users/bentd/Work/Notes/bullet-editor0/src/BridgeManager.js"],"names":["ComponentManager","BridgeManager","instance","updateObservers","initiateBridge","callback","observer","push","note","permissions","name","componentManager","streamContextItem","item","notifyObserversOfUpdate"],"mappings":";;AAAA,OAAOA,gBAAP,MAA6B,mBAA7B;;IAEqBC,a;;;;;;AAEnB;0BAEa;AACX,UAAI,KAAKC,QAAL,IAAiB,IAArB,EAA2B;AAAE,aAAKA,QAAL,GAAgB,IAAID,aAAJ,EAAhB;AAAsC;;AACnE,aAAO,KAAKC,QAAZ;AACD;;;AAED,2BAAc;AAAA;;AACZ,SAAKC,eAAL,GAAuB,EAAvB;AACA,SAAKC,cAAL;AACD;;;;sCAEiBC,Q,EAAU;AAC1B,UAAIC,QAAQ,GAAG;AAACD,QAAAA,QAAQ,EAAEA;AAAX,OAAf;AACA,WAAKF,eAAL,CAAqBI,IAArB,CAA0BD,QAA1B;AACA,aAAOA,QAAP;AACD;;;8CAEyB;AAAA;AAAA;AAAA;;AAAA;AACxB,6BAAoB,KAAKH,eAAzB,8HAA0C;AAAA,cAAlCG,QAAkC;AACxCA,UAAAA,QAAQ,CAACD,QAAT;AACD;AAHuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIzB;;;8BAES;AACR,aAAO,KAAKG,IAAZ;AACD;;;qCAEgB;AAAA;;AACf,UAAIC,WAAW,GAAG,CAChB;AACEC,QAAAA,IAAI,EAAE,qBADR,CAEE;;AAFF,OADgB,CAAlB;AAOA,WAAKC,gBAAL,GAAwB,IAAIX,gBAAJ,CAAqBS,WAArB,EAAkC,YAAU,CAClE;AACD,OAFuB,CAAxB;AAIA,WAAKE,gBAAL,CAAsBC,iBAAtB,CAAwC,UAACC,IAAD,EAAU;AAChD,QAAA,KAAI,CAACL,IAAL,GAAYK,IAAZ;;AACA,QAAA,KAAI,CAACC,uBAAL;AACF,OAHA,EAZe,CAiBf;AACA;AACA;AACD;;;;;;AAlDkBb,a,CAGZC,Q,GAAW,I;SAHCD,a","sourcesContent":["import ComponentManager from 'sn-components-api';\n\nexport default class BridgeManager {\n\n  /* Singleton */\n  static instance = null;\n  static get() {\n    if (this.instance == null) { this.instance = new BridgeManager(); }\n    return this.instance;\n  }\n\n  constructor() {\n    this.updateObservers = [];\n    this.initiateBridge();\n  }\n\n  addUpdateObserver(callback) {\n    let observer = {callback: callback};\n    this.updateObservers.push(observer);\n    return observer;\n  }\n\n  notifyObserversOfUpdate() {\n    for(var observer of this.updateObservers) {\n      observer.callback();\n    }\n  }\n\n  getNote() {\n    return this.note;\n  }\n\n  initiateBridge() {\n    var permissions = [\n      {\n        name: \"stream-context-item\"\n        // name: \"stream-items\"\n      }\n    ]\n\n    this.componentManager = new ComponentManager(permissions, function(){\n      // on ready\n    });\n\n    this.componentManager.streamContextItem((item) => {\n      this.note = item;\n      this.notifyObserversOfUpdate();\n  \t})\n\n    // this.componentManager.streamItems([\"SN|Component\", \"SN|Theme\", \"SF|Extension\"], (items) => {\n    //   this.items = items.filter((item) => {return !item.isMetadataUpdate});\n    // });\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module"}