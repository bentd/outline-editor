{"ast":null,"code":"(function () {\n  var unique_id,\n      extend = function extend(child, parent) {\n    for (var key in parent) {\n      if (hasProp.call(parent, key)) child[key] = parent[key];\n    }\n\n    function ctor() {\n      this.constructor = child;\n    }\n\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n    child.__super__ = parent.prototype;\n    return child;\n  },\n      hasProp = {}.hasOwnProperty;\n\n  unique_id = 0;\n\n  this.Node = function () {\n    function Node(tag, value, start_mark, end_mark) {\n      this.tag = tag;\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n      this.unique_id = \"node_\" + unique_id++;\n    }\n\n    return Node;\n  }();\n\n  this.ScalarNode = function (superClass) {\n    extend(ScalarNode, superClass);\n    ScalarNode.prototype.id = 'scalar';\n\n    function ScalarNode(tag, value, start_mark, end_mark, style) {\n      this.tag = tag;\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n      this.style = style;\n\n      ScalarNode.__super__.constructor.apply(this, arguments);\n    }\n\n    return ScalarNode;\n  }(this.Node);\n\n  this.CollectionNode = function (superClass) {\n    extend(CollectionNode, superClass);\n\n    function CollectionNode(tag, value, start_mark, end_mark, flow_style) {\n      this.tag = tag;\n      this.value = value;\n      this.start_mark = start_mark;\n      this.end_mark = end_mark;\n      this.flow_style = flow_style;\n\n      CollectionNode.__super__.constructor.apply(this, arguments);\n    }\n\n    return CollectionNode;\n  }(this.Node);\n\n  this.SequenceNode = function (superClass) {\n    extend(SequenceNode, superClass);\n\n    function SequenceNode() {\n      return SequenceNode.__super__.constructor.apply(this, arguments);\n    }\n\n    SequenceNode.prototype.id = 'sequence';\n    return SequenceNode;\n  }(this.CollectionNode);\n\n  this.MappingNode = function (superClass) {\n    extend(MappingNode, superClass);\n\n    function MappingNode() {\n      return MappingNode.__super__.constructor.apply(this, arguments);\n    }\n\n    MappingNode.prototype.id = 'mapping';\n    return MappingNode;\n  }(this.CollectionNode);\n}).call(this);","map":null,"metadata":{},"sourceType":"script"}