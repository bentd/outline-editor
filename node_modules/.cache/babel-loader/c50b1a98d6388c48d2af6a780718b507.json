{"ast":null,"code":"var ADD_BULLET = \"ADD_BULLET\";\nvar EDIT_BULLET = \"EDIT_BULLET\";\nvar REMOVE_BULLET = \"REMOVE_BULLET\";\nvar INDENT_BULLET = \"INDENT_BULLET\";\nvar UNINDENT_BULLET = \"UNINDENT_BULLET\";\nvar CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position, uuid) {\n  return {\n    type: ADD_BULLET,\n    position: position,\n    uuid: uuid,\n    exec: function exec(state) {\n      var positionCopy = position;\n      var childPosition = positionCopy.pop();\n      var parentPosition = positionCopy.shift();\n      var parent = state.all[parentPosition].children;\n\n      while (positionArray.length > 0) {\n        parentPosition = positionArray.shift();\n        parent = parent[parentPosition].children;\n      }\n\n      parent.splice(childPosition + 1, 0, {\n        content: \"\",\n        note: \"\",\n        id: uuid,\n        completed: false,\n        children: []\n      });\n      return state;\n    }\n  };\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position: position,\n    content: content\n  };\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position: position\n  };\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position: position\n  };\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position: position\n  };\n}\n\nfunction getNote(positionArray, all) {\n  var index = positionArray.shift();\n\n  if (positionArray.length == 0) {\n    return all[index];\n  } else {\n    return getNote(positionArray, all[index].children);\n  }\n}\n\nexport { ADD_BULLET, EDIT_BULLET, REMOVE_BULLET, INDENT_BULLET, UNINDENT_BULLET, addBullet, editBullet, removeBullet, indentBullet, unindentBullet, getNote, addNote };","map":{"version":3,"sources":["/Users/bentd/Work/Notes/bullet-editor/src/Actions.js"],"names":["ADD_BULLET","EDIT_BULLET","REMOVE_BULLET","INDENT_BULLET","UNINDENT_BULLET","CHANGE_CURRENT_NOTE","addBullet","position","uuid","type","exec","state","positionCopy","childPosition","pop","parentPosition","shift","parent","all","children","positionArray","length","splice","content","note","id","completed","editBullet","removeBullet","indentBullet","unindentBullet","getNote","index","addNote"],"mappings":"AAAA,IAAMA,UAAU,GAAG,YAAnB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6BC,IAA7B,EAAmC;AACjC,SAAO;AACLC,IAAAA,IAAI,EAAET,UADD;AAELO,IAAAA,QAAQ,EAARA,QAFK;AAGLC,IAAAA,IAAI,EAAJA,IAHK;AAILE,IAAAA,IAAI,EAAE,cAACC,KAAD,EAAW;AACf,UAAIC,YAAY,GAAGL,QAAnB;AACA,UAAIM,aAAa,GAAGD,YAAY,CAACE,GAAb,EAApB;AACA,UAAIC,cAAc,GAAGH,YAAY,CAACI,KAAb,EAArB;AACA,UAAIC,MAAM,GAAGN,KAAK,CAACO,GAAN,CAAUH,cAAV,EAA0BI,QAAvC;;AACA,aAAOC,aAAa,CAACC,MAAd,GAAuB,CAA9B,EAAiC;AAC/BN,QAAAA,cAAc,GAAGK,aAAa,CAACJ,KAAd,EAAjB;AACAC,QAAAA,MAAM,GAAGA,MAAM,CAACF,cAAD,CAAN,CAAuBI,QAAhC;AACD;;AACDF,MAAAA,MAAM,CAACK,MAAP,CAAcT,aAAa,GAAG,CAA9B,EAAiC,CAAjC,EAAoC;AAACU,QAAAA,OAAO,EAAE,EAAV;AAAcC,QAAAA,IAAI,EAAE,EAApB;AAAwBC,QAAAA,EAAE,EAAEjB,IAA5B;AAAkCkB,QAAAA,SAAS,EAAE,KAA7C;AAAoDP,QAAAA,QAAQ,EAAE;AAA9D,OAApC;AACA,aAAOR,KAAP;AACD;AAfI,GAAP;AAiBD;;AAED,SAASgB,UAAT,CAAoBpB,QAApB,EAA8BgB,OAA9B,EAAuC;AACrC,SAAO;AACLd,IAAAA,IAAI,EAAER,WADD;AAELM,IAAAA,QAAQ,EAARA,QAFK;AAGLgB,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD;;AAED,SAASK,YAAT,CAAsBrB,QAAtB,EAAgC;AAC9B,SAAO;AACLE,IAAAA,IAAI,EAAEP,aADD;AAELK,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASsB,YAAT,CAAsBtB,QAAtB,EAAgC;AAC9B,SAAO;AACLE,IAAAA,IAAI,EAAEN,aADD;AAELI,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASuB,cAAT,CAAwBvB,QAAxB,EAAkC;AAChC,SAAO;AACLE,IAAAA,IAAI,EAAEL,eADD;AAELG,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASwB,OAAT,CAAiBX,aAAjB,EAAgCF,GAAhC,EAAqC;AACnC,MAAIc,KAAK,GAAGZ,aAAa,CAACJ,KAAd,EAAZ;;AACA,MAAII,aAAa,CAACC,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,WAAOH,GAAG,CAACc,KAAD,CAAV;AACD,GAFD,MAGK;AACH,WAAOD,OAAO,CAACX,aAAD,EAAgBF,GAAG,CAACc,KAAD,CAAH,CAAWb,QAA3B,CAAd;AACD;AACF;;AAID,SAASnB,UAAT,EACSC,WADT,EAESC,aAFT,EAGSC,aAHT,EAISC,eAJT,EAKSE,SALT,EAMSqB,UANT,EAOSC,YAPT,EAQSC,YART,EASSC,cATT,EAUSC,OAVT,EAWSE,OAXT","sourcesContent":["const ADD_BULLET = \"ADD_BULLET\";\nconst EDIT_BULLET = \"EDIT_BULLET\";\nconst REMOVE_BULLET = \"REMOVE_BULLET\";\nconst INDENT_BULLET = \"INDENT_BULLET\";\nconst UNINDENT_BULLET = \"UNINDENT_BULLET\";\nconst CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position, uuid) {\n  return {\n    type: ADD_BULLET,\n    position,\n    uuid,\n    exec: (state) => {\n      let positionCopy = position;\n      let childPosition = positionCopy.pop();\n      let parentPosition = positionCopy.shift();\n      let parent = state.all[parentPosition].children;\n      while (positionArray.length > 0) {\n        parentPosition = positionArray.shift();\n        parent = parent[parentPosition].children;\n      }\n      parent.splice(childPosition + 1, 0, {content: \"\", note: \"\", id: uuid, completed: false, children: []});\n      return state;\n    }\n  }\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position,\n    content\n  }\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position\n  }\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position\n  }\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position\n  }\n}\n\nfunction getNote(positionArray, all) {\n  let index = positionArray.shift();\n  if (positionArray.length == 0) {\n    return all[index]\n  }\n  else {\n    return getNote(positionArray, all[index].children)\n  }\n}\n\n\n\nexport { ADD_BULLET,\n         EDIT_BULLET,\n         REMOVE_BULLET,\n         INDENT_BULLET,\n         UNINDENT_BULLET,\n         addBullet,\n         editBullet,\n         removeBullet,\n         indentBullet,\n         unindentBullet,\n         getNote,\n         addNote };\n"]},"metadata":{},"sourceType":"module"}