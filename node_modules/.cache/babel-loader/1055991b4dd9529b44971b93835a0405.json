{"ast":null,"code":"import $ from \"jquery\";\nvar ADD_BULLET = \"ADD_BULLET\";\nvar EDIT_BULLET = \"EDIT_BULLET\";\nvar REMOVE_BULLET = \"REMOVE_BULLET\";\nvar INDENT_BULLET = \"INDENT_BULLET\";\nvar UNINDENT_BULLET = \"UNINDENT_BULLET\";\nvar CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position, uuid) {\n  return {\n    type: ADD_BULLET,\n    position: position,\n    uuid: uuid,\n    exec: function exec(state) {\n      var childPosition = position.pop();\n      var parent = state.root[position.shift()].children;\n\n      while (position.length > 0) {\n        parent = state.root[position.shift()].children;\n      }\n\n      parent.splice(childPosition + 1, 0, {\n        content: \"\",\n        note: \"\",\n        id: uuid,\n        completed: false,\n        children: []\n      });\n      setTimeout(function () {\n        document.getElementById(uuid).focus();\n      }, 0);\n      return state;\n    }\n  };\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position: position,\n    content: content\n  };\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position: position\n  };\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position: position,\n    exec: function exec(state) {\n      var childPosition = position.pop();\n\n      if (childPosition == 0) {\n        return state;\n      }\n\n      var parents = [];\n      var parentPosition = position.shift();\n      var parent = state.root[parentPosition];\n      parents.push(parent);\n\n      while (position.length > 0) {\n        parentPosition = position.shift();\n        parent = parent.children[parentPosition];\n        parents.push(parent);\n      }\n\n      var child = parent.children.splice(childPosition, 1)[0];\n      var newParent = parent.children[childPosition - 1];\n      newParent.children.push(child);\n      parents.push(newParent);\n      setTimeout(function () {\n        for (var x = 0; x < parents.length; x++) {\n          var selector = \"#\".concat(parents[x].id);\n          console.log(selector);\n          $(selector).closest(\".bullet\").children(\".collapse\").addClass(\"show\");\n        }\n      }, 0);\n      return state;\n    }\n  };\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position: position,\n    exec: function exec(state) {\n      var childPosition = position.pop();\n\n      if (childPosition == 0) {\n        return state;\n      }\n\n      var parents = [];\n      var parentPosition = position.shift();\n      var parent = state.root[parentPosition];\n      parents.push(parent);\n\n      while (position.length > 0) {\n        parentPosition = position.shift();\n        parent = parent.children[parentPosition];\n        parents.push(parent);\n      }\n\n      var child = parent.children.splice(childPosition, 1)[0];\n      var above = parent.children[childPosition - 1];\n      above.children.push(child);\n      parents.push(above);\n      setTimeout(function () {\n        for (var x = 0; x < parents.length; x++) {\n          var selector = \"#\".concat(parents[x].id);\n          console.log(selector);\n          $(selector).closest(\".bullet\").find(\".collapse\").addClass(\"show\");\n        }\n      }, 0);\n      return state;\n    }\n  };\n}\n\nfunction getNode(indices, root) {\n  var parent = root[indices.shift()];\n  console.log(parent);\n\n  while (indices.length > 1) {\n    parent = parent.children[indices.shift()];\n    console.log(parent);\n  }\n\n  return parent.children[indices.shift()];\n}\n\nfunction getTree(indices, root) {\n  var tree = [];\n  var parent = root[indices.shift()];\n\n  while (indices.length != 0) {\n    tree.push(parent);\n    parent = parent[indices.shift()];\n  }\n\n  return tree;\n}\n\nexport { ADD_BULLET, EDIT_BULLET, REMOVE_BULLET, INDENT_BULLET, UNINDENT_BULLET, addBullet, editBullet, removeBullet, indentBullet, unindentBullet, getNote };","map":{"version":3,"sources":["/Users/bentd/Work/Notes/bullet-editor/src/Actions.js"],"names":["$","ADD_BULLET","EDIT_BULLET","REMOVE_BULLET","INDENT_BULLET","UNINDENT_BULLET","CHANGE_CURRENT_NOTE","addBullet","position","uuid","type","exec","state","childPosition","pop","parent","root","shift","children","length","splice","content","note","id","completed","setTimeout","document","getElementById","focus","editBullet","removeBullet","indentBullet","parents","parentPosition","push","child","newParent","x","selector","console","log","closest","addClass","unindentBullet","above","find","getNode","indices","getTree","tree","getNote"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\n\nconst ADD_BULLET = \"ADD_BULLET\";\nconst EDIT_BULLET = \"EDIT_BULLET\";\nconst REMOVE_BULLET = \"REMOVE_BULLET\";\nconst INDENT_BULLET = \"INDENT_BULLET\";\nconst UNINDENT_BULLET = \"UNINDENT_BULLET\";\nconst CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position, uuid) {\n  return {\n    type: ADD_BULLET,\n    position,\n    uuid,\n    exec: (state) => {\n      let childPosition = position.pop();\n      let parent = state.root[position.shift()].children;\n      while (position.length > 0) {\n        parent = state.root[position.shift()].children;\n      }\n      parent.splice(childPosition + 1, 0, {content: \"\", note: \"\", id: uuid, completed: false, children: []});\n      setTimeout(() => {\n        document.getElementById(uuid).focus();\n      }, 0);\n      return state;\n    }\n  }\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position,\n    content\n  }\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position\n  }\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position,\n    exec: (state) => {\n      let childPosition = position.pop();\n      if (childPosition == 0) { return state }\n      let parents = [];\n      let parentPosition = position.shift();\n      let parent = state.root[parentPosition];\n      parents.push(parent);\n      while (position.length > 0) {\n        parentPosition = position.shift();\n        parent = parent.children[parentPosition];\n        parents.push(parent);\n      }\n      let child = parent.children.splice(childPosition, 1)[0];\n      let newParent = parent.children[childPosition-1];\n      newParent.children.push(child);\n      parents.push(newParent);\n      setTimeout(() => {\n        for (let x = 0; x < parents.length; x++) {\n          let selector = `#${ parents[x].id }`;\n          console.log(selector);\n          $(selector).closest(\".bullet\").children(\".collapse\").addClass(\"show\");\n        }\n      }, 0);\n      return state;\n    }\n  }\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position,\n    exec: (state) => {\n      let childPosition = position.pop();\n      if (childPosition == 0) { return state }\n      let parents = [];\n      let parentPosition = position.shift();\n      let parent = state.root[parentPosition];\n      parents.push(parent);\n      while (position.length > 0) {\n        parentPosition = position.shift();\n        parent = parent.children[parentPosition];\n        parents.push(parent);\n      }\n      let child = parent.children.splice(childPosition, 1)[0];\n      let above = parent.children[childPosition-1];\n      above.children.push(child);\n      parents.push(above);\n      setTimeout(() => {\n        for (let x = 0; x < parents.length; x++) {\n          let selector = `#${ parents[x].id }`;\n          console.log(selector);\n          $(selector).closest(\".bullet\").find(\".collapse\").addClass(\"show\");\n        }\n      }, 0);\n      return state;\n    }\n  }\n}\n\nfunction getNode(indices, root) {\n  let parent = root[indices.shift()];\n  console.log(parent);\n  while (indices.length > 1) {\n    parent = parent.children[indices.shift()];\n    console.log(parent);\n  }\n  return parent.children[indices.shift()];\n}\n\nfunction getTree(indices, root) {\n  let tree = [];\n  let parent = root[indices.shift()];\n  while (indices.length != 0) {\n    tree.push(parent);\n    parent = parent[indices.shift()];\n  }\n  return tree;\n}\n\n\n\nexport { ADD_BULLET,\n         EDIT_BULLET,\n         REMOVE_BULLET,\n         INDENT_BULLET,\n         UNINDENT_BULLET,\n         addBullet,\n         editBullet,\n         removeBullet,\n         indentBullet,\n         unindentBullet,\n         getNote };\n"]},"metadata":{},"sourceType":"module"}