{"ast":null,"code":"import _toConsumableArray from \"/Users/bentd/Work/Notes/bullet-editor/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport $ from \"jquery\";\nvar ADD_BULLET = \"ADD_BULLET\";\nvar EDIT_BULLET = \"EDIT_BULLET\";\nvar REMOVE_BULLET = \"REMOVE_BULLET\";\nvar INDENT_BULLET = \"INDENT_BULLET\";\nvar UNINDENT_BULLET = \"UNINDENT_BULLET\";\nvar CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position, uuid) {\n  return {\n    type: ADD_BULLET,\n    position: position,\n    uuid: uuid,\n    exec: function exec(state) {\n      var childPosition = position.pop();\n      var parent = state.root[position.shift()].children;\n\n      while (position.length > 0) {\n        parent = state.root[position.shift()].children;\n      }\n\n      parent.splice(childPosition + 1, 0, {\n        content: \"\",\n        note: \"\",\n        id: uuid,\n        completed: false,\n        children: []\n      });\n      setTimeout(function () {\n        document.getElementById(uuid).focus();\n      }, 0);\n      return state;\n    }\n  };\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position: position,\n    content: content\n  };\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position: position\n  };\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position: position,\n    exec: function exec(state) {\n      var childPosition = position.slice(-1)[0];\n\n      if (childPosition == 0) {\n        return state;\n      }\n\n      var tree = getTree(position.slice(0, -1), state.root);\n      var newParent = getNode([].concat(_toConsumableArray(position.slice(0, -1)), [childPosition - 1]), state.root);\n      var oldParent = tree.slice(-1)[0];\n      var child = oldParent.children.splice(childPosition, 1)[0];\n      newParent.children.push(child);\n      tree.push(newParent);\n      setTimeout(function () {\n        tree.map(function (parent) {\n          $(\"#\".concat(parent.id)).closest(\".bullet\").children(\".collapse\").addClass(\"show\");\n        });\n      }, 0);\n      return state;\n    }\n  };\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position: position,\n    exec: function exec(state) {\n      if (position.length == 2) {\n        return state;\n      }\n\n      var childPosition = position.slice(-1)[0];\n      var oldParentPosition = position.slice(-2, -1)[0];\n      var tree = getTree(position.slice(0, -1), state.root);\n      var newParent = tree.slice(-2, -1)[0];\n      var oldParent = tree.slice(-1)[0];\n      var child = oldParent.children.splice(childPosition, 1)[0];\n      newParent.children.splice(oldParentPosition + 1, 0, child);\n      setTimeout(function () {\n        tree.slice(0, -2).map(function (parent) {\n          $(\"#\".concat(parent.id)).closest(\".bullet\").children(\".collapse\").addClass(\"show\");\n        });\n      }, 0);\n      console.log(state);\n      return state;\n    }\n  };\n}\n\nfunction getNode(indices, root) {\n  var node = root[indices.shift()];\n\n  while (indices.length > 0) {\n    node = node.children[indices.shift()];\n  }\n\n  return node;\n}\n\nfunction getTree(indices, root) {\n  var tree = [];\n  var node = root[indices.shift()];\n  tree.push(node);\n\n  while (indices.length > 0) {\n    node = node.children[indices.shift()];\n    tree.push(node);\n  }\n\n  return tree;\n}\n\nexport { ADD_BULLET, EDIT_BULLET, REMOVE_BULLET, INDENT_BULLET, UNINDENT_BULLET, addBullet, editBullet, removeBullet, indentBullet, unindentBullet, getNode, getTree };","map":{"version":3,"sources":["/Users/bentd/Work/Notes/bullet-editor/src/Actions.js"],"names":["$","ADD_BULLET","EDIT_BULLET","REMOVE_BULLET","INDENT_BULLET","UNINDENT_BULLET","CHANGE_CURRENT_NOTE","addBullet","position","uuid","type","exec","state","childPosition","pop","parent","root","shift","children","length","splice","content","note","id","completed","setTimeout","document","getElementById","focus","editBullet","removeBullet","indentBullet","slice","tree","getTree","newParent","getNode","oldParent","child","push","map","closest","addClass","unindentBullet","oldParentPosition","console","log","indices","node"],"mappings":"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","sourcesContent":["import $ from \"jquery\";\n\nconst ADD_BULLET = \"ADD_BULLET\";\nconst EDIT_BULLET = \"EDIT_BULLET\";\nconst REMOVE_BULLET = \"REMOVE_BULLET\";\nconst INDENT_BULLET = \"INDENT_BULLET\";\nconst UNINDENT_BULLET = \"UNINDENT_BULLET\";\nconst CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position, uuid) {\n  return {\n    type: ADD_BULLET,\n    position,\n    uuid,\n    exec: (state) => {\n      let childPosition = position.pop();\n      let parent = state.root[position.shift()].children;\n      while (position.length > 0) {\n        parent = state.root[position.shift()].children;\n      }\n      parent.splice(childPosition + 1, 0, {content: \"\", note: \"\", id: uuid, completed: false, children: []});\n      setTimeout(() => {\n        document.getElementById(uuid).focus();\n      }, 0);\n      return state;\n    }\n  }\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position,\n    content\n  }\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position\n  }\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position,\n    exec: (state) => {\n      let childPosition = position.slice(-1)[0];\n      if (childPosition == 0) { return state }\n      let tree = getTree(position.slice(0, -1), state.root);\n      let newParent = getNode([...position.slice(0,-1), (childPosition-1)], state.root);\n      let oldParent = tree.slice(-1)[0];\n      let child = oldParent.children.splice(childPosition, 1)[0];\n      newParent.children.push(child);\n      tree.push(newParent);\n      setTimeout(() => {\n        tree.map(parent => {\n          $(`#${parent.id}`).closest(\".bullet\").children(\".collapse\").addClass(\"show\");\n        });\n      }, 0);\n      return state;\n    }\n  }\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position,\n    exec: (state) => {\n      if (position.length == 2) { return state }\n      let childPosition = position.slice(-1)[0];\n      let oldParentPosition = position.slice(-2, -1)[0];\n      let tree = getTree(position.slice(0, -1), state.root);\n      let newParent = tree.slice(-2,-1)[0];\n      let oldParent = tree.slice(-1)[0];\n      let child = oldParent.children.splice(childPosition, 1)[0];\n      newParent.children.splice((oldParentPosition + 1), 0, child);\n      setTimeout(() => {\n        tree.slice(0,-2).map(parent => {\n          $(`#${parent.id}`).closest(\".bullet\").children(\".collapse\").addClass(\"show\");\n        });\n      }, 0);\n      console.log(state);\n      return state;\n    }\n  }\n}\n\nfunction getNode(indices, root) {\n  let node = root[indices.shift()];\n  while (indices.length > 0) {\n    node = node.children[indices.shift()];\n  }\n  return node;\n}\n\nfunction getTree(indices, root) {\n  let tree = [];\n  let node = root[indices.shift()];\n  tree.push(node)\n  while (indices.length > 0) {\n    node = node.children[indices.shift()];\n    tree.push(node);\n  }\n  return tree;\n}\n\n\n\nexport { ADD_BULLET,\n         EDIT_BULLET,\n         REMOVE_BULLET,\n         INDENT_BULLET,\n         UNINDENT_BULLET,\n         addBullet,\n         editBullet,\n         removeBullet,\n         indentBullet,\n         unindentBullet,\n         getNode,\n         getTree };\n"]},"metadata":{},"sourceType":"module"}