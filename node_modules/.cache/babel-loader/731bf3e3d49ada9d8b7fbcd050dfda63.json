{"ast":null,"code":"import uuidv1 from \"uuid/v1\";\nvar ADD_BULLET = \"ADD_BULLET\";\nvar EDIT_BULLET = \"EDIT_BULLET\";\nvar REMOVE_BULLET = \"REMOVE_BULLET\";\nvar INDENT_BULLET = \"INDENT_BULLET\";\nvar UNINDENT_BULLET = \"UNINDENT_BULLET\";\nvar CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position) {\n  return {\n    type: ADD_BULLET,\n    position: position\n  };\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position: position,\n    content: content\n  };\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position: position\n  };\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position: position\n  };\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position: position\n  };\n}\n\nfunction getNote(positionArray, all) {\n  var index = positionArray.shift();\n\n  if (positionArray.length == 0) {\n    return all[index];\n  } else {\n    return getNote(positionArray, all[index].children);\n  }\n}\n\nfunction addNote(positionArray, uuid, state) {\n  var currentBulletPosition = positionArray.pop();\n  var parentPosition = positionArray.shift();\n  var parent = state.all[parentPosition].children;\n\n  while (positionArray.length > 0) {\n    parentPosition = positionArray.shift();\n    parent = parent[parentPosition].children;\n  }\n\n  parent.splice(currentBulletPosition + 1, 0, {\n    content: \"\",\n    note: \"\",\n    id: uuid,\n    completed: false,\n    children: []\n  });\n  return state;\n}\n\nexport { ADD_BULLET, EDIT_BULLET, REMOVE_BULLET, INDENT_BULLET, UNINDENT_BULLET, addBullet, editBullet, removeBullet, indentBullet, unindentBullet, getNote, addNote };","map":{"version":3,"sources":["/Users/bentd/Work/Notes/bullet-editor/src/Actions.js"],"names":["uuidv1","ADD_BULLET","EDIT_BULLET","REMOVE_BULLET","INDENT_BULLET","UNINDENT_BULLET","CHANGE_CURRENT_NOTE","addBullet","position","type","editBullet","content","removeBullet","indentBullet","unindentBullet","getNote","positionArray","all","index","shift","length","children","addNote","uuid","state","currentBulletPosition","pop","parentPosition","parent","splice","note","id","completed"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AAEA,IAAMC,UAAU,GAAG,YAAnB;AACA,IAAMC,WAAW,GAAG,aAApB;AACA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,aAAa,GAAG,eAAtB;AACA,IAAMC,eAAe,GAAG,iBAAxB;AACA,IAAMC,mBAAmB,GAAG,qBAA5B;;AAEA,SAASC,SAAT,CAAmBC,QAAnB,EAA6B;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAER,UADD;AAELO,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASE,UAAT,CAAoBF,QAApB,EAA8BG,OAA9B,EAAuC;AACrC,SAAO;AACLF,IAAAA,IAAI,EAAEP,WADD;AAELM,IAAAA,QAAQ,EAARA,QAFK;AAGLG,IAAAA,OAAO,EAAPA;AAHK,GAAP;AAKD;;AAED,SAASC,YAAT,CAAsBJ,QAAtB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEN,aADD;AAELK,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASK,YAAT,CAAsBL,QAAtB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,IAAI,EAAEL,aADD;AAELI,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASM,cAAT,CAAwBN,QAAxB,EAAkC;AAChC,SAAO;AACLC,IAAAA,IAAI,EAAEJ,eADD;AAELG,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID;;AAED,SAASO,OAAT,CAAiBC,aAAjB,EAAgCC,GAAhC,EAAqC;AACnC,MAAIC,KAAK,GAAGF,aAAa,CAACG,KAAd,EAAZ;;AACA,MAAIH,aAAa,CAACI,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,WAAOH,GAAG,CAACC,KAAD,CAAV;AACD,GAFD,MAGK;AACH,WAAOH,OAAO,CAACC,aAAD,EAAgBC,GAAG,CAACC,KAAD,CAAH,CAAWG,QAA3B,CAAd;AACD;AACF;;AAED,SAASC,OAAT,CAAiBN,aAAjB,EAAgCO,IAAhC,EAAsCC,KAAtC,EAA6C;AAC3C,MAAIC,qBAAqB,GAAGT,aAAa,CAACU,GAAd,EAA5B;AACA,MAAIC,cAAc,GAAGX,aAAa,CAACG,KAAd,EAArB;AACA,MAAIS,MAAM,GAAGJ,KAAK,CAACP,GAAN,CAAUU,cAAV,EAA0BN,QAAvC;;AACA,SAAOL,aAAa,CAACI,MAAd,GAAuB,CAA9B,EAAiC;AAC/BO,IAAAA,cAAc,GAAGX,aAAa,CAACG,KAAd,EAAjB;AACAS,IAAAA,MAAM,GAAGA,MAAM,CAACD,cAAD,CAAN,CAAuBN,QAAhC;AACD;;AACDO,EAAAA,MAAM,CAACC,MAAP,CAAcJ,qBAAqB,GAAG,CAAtC,EAAyC,CAAzC,EAA4C;AAACd,IAAAA,OAAO,EAAE,EAAV;AAAcmB,IAAAA,IAAI,EAAE,EAApB;AAAwBC,IAAAA,EAAE,EAAER,IAA5B;AAAkCS,IAAAA,SAAS,EAAE,KAA7C;AAAoDX,IAAAA,QAAQ,EAAE;AAA9D,GAA5C;AACA,SAAOG,KAAP;AACD;;AAED,SAASvB,UAAT,EACSC,WADT,EAESC,aAFT,EAGSC,aAHT,EAISC,eAJT,EAKSE,SALT,EAMSG,UANT,EAOSE,YAPT,EAQSC,YART,EASSC,cATT,EAUSC,OAVT,EAWSO,OAXT","sourcesContent":["import uuidv1 from \"uuid/v1\";\n\nconst ADD_BULLET = \"ADD_BULLET\";\nconst EDIT_BULLET = \"EDIT_BULLET\";\nconst REMOVE_BULLET = \"REMOVE_BULLET\";\nconst INDENT_BULLET = \"INDENT_BULLET\";\nconst UNINDENT_BULLET = \"UNINDENT_BULLET\";\nconst CHANGE_CURRENT_NOTE = \"CHANGE_CURRENT_NOTE\";\n\nfunction addBullet(position) {\n  return {\n    type: ADD_BULLET,\n    position\n  }\n}\n\nfunction editBullet(position, content) {\n  return {\n    type: EDIT_BULLET,\n    position,\n    content\n  }\n}\n\nfunction removeBullet(position) {\n  return {\n    type: REMOVE_BULLET,\n    position\n  }\n}\n\nfunction indentBullet(position) {\n  return {\n    type: INDENT_BULLET,\n    position\n  }\n}\n\nfunction unindentBullet(position) {\n  return {\n    type: UNINDENT_BULLET,\n    position\n  }\n}\n\nfunction getNote(positionArray, all) {\n  let index = positionArray.shift();\n  if (positionArray.length == 0) {\n    return all[index]\n  }\n  else {\n    return getNote(positionArray, all[index].children)\n  }\n}\n\nfunction addNote(positionArray, uuid, state) {\n  let currentBulletPosition = positionArray.pop();\n  let parentPosition = positionArray.shift();\n  let parent = state.all[parentPosition].children;\n  while (positionArray.length > 0) {\n    parentPosition = positionArray.shift();\n    parent = parent[parentPosition].children;\n  }\n  parent.splice(currentBulletPosition + 1, 0, {content: \"\", note: \"\", id: uuid, completed: false, children: []});\n  return state;\n}\n\nexport { ADD_BULLET,\n         EDIT_BULLET,\n         REMOVE_BULLET,\n         INDENT_BULLET,\n         UNINDENT_BULLET,\n         addBullet,\n         editBullet,\n         removeBullet,\n         indentBullet,\n         unindentBullet,\n         getNote,\n         addNote };\n"]},"metadata":{},"sourceType":"module"}